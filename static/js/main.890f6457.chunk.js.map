{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setIsReversed","NONE","sortType","setSortType","goods","getReorderedGoods","ALPABET","sort","first","second","localeCompare","LENGTH","length","reverse","className","type","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,0DAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAcE,IAAME,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASH,EAASM,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EAZD,SACLA,GAIA,OAFkB,YAAOA,GASXC,CAAkBT,GAmBhC,OAZIM,IAAaP,EAASW,SACxBF,EAAMG,MAAK,SAACC,EAAOC,GAAR,OAAmBD,EAAME,cAAcD,MAGhDP,IAAaP,EAASgB,QACxBP,EAAMG,MAAK,SAACC,EAAOC,GAAR,OAAmBD,EAAMI,OAASH,EAAOG,UAGlDb,GACFK,EAAMS,UAIN,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACEZ,IAAaP,EAASW,QAClB,iBACA,0BAENU,QAAS,kBAAMb,EAAYR,EAASW,UAPtC,iCAYA,wBACES,KAAK,SACLD,UACEZ,IAAaP,EAASgB,OAClB,oBACA,6BAENK,QAAS,kBAAMb,EAAYR,EAASgB,SAPtC,4BAYA,wBACEI,KAAK,SACLD,UACEf,EACI,oBACA,6BAENiB,QAAS,kBAAMhB,GAAeD,IAPhC,sBAYGA,GAAcG,IAAaP,EAASM,MAEnC,wBACEc,KAAK,SACLD,UAAU,4BACVE,QAAS,kBA5DnBhB,GAAc,QACdG,EAAYR,EAASM,OAwDb,sBAUN,6BACE,6BACGG,EAAMa,KAAI,SAACC,GAAD,OACT,oBAAI,UAAQ,OAAZ,SAAoBA,eCzGhCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.890f6457.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\nexport function getReorderedGoods(\n  goods: string[],\n) {\n  const visibleGoods = [...goods];\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const goods = getReorderedGoods(goodsFromServer);\n\n  const reset = () => {\n    setIsReversed(false);\n    setSortType(SortType.NONE);\n  };\n\n  if (sortType === SortType.ALPABET) {\n    goods.sort((first, second) => first.localeCompare(second));\n  }\n\n  if (sortType === SortType.LENGTH) {\n    goods.sort((first, second) => first.length - second.length);\n  }\n\n  if (isReversed) {\n    goods.reverse();\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={\n            sortType === SortType.ALPABET\n              ? 'button is-info'\n              : 'button is-info is-light'\n          }\n          onClick={() => setSortType(SortType.ALPABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            sortType === SortType.LENGTH\n              ? 'button is-success'\n              : 'button is-success is-light'\n          }\n          onClick={() => setSortType(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            isReversed\n              ? 'button is-warning'\n              : 'button is-warning is-light'\n          }\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {(!isReversed && sortType === SortType.NONE)\n          || (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => reset()}\n            >\n              Reset\n            </button>\n          )}\n      </div>\n\n      <ul>\n        <ul>\n          {goods.map((good) => (\n            <li data-cy=\"Good\">{good}</li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}